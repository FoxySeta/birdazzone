{
    "swagger": "2.0",
    "info": {
        "description": "API implementation for the Software Engineering (90106) project for the academic year 2022/23 at the University of Bologna.",
        "title": "Birdazzone API",
        "contact": {},
        "license": {
            "name": "GNU AFFERO GENERAL PUBLIC LICENSE",
            "url": "https://www.gnu.org/licenses/agpl-3.0.en.html"
        },
        "version": "0.1"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/hello": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "test"
                ],
                "summary": "Test your connection to birdazzone API",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/tvgames": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tvgames"
                ],
                "summary": "Get all TV games",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Game"
                            }
                        }
                    }
                }
            }
        },
        "/tvgames/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tvgames"
                ],
                "summary": "Get TV game",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID to search",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Game"
                        }
                    },
                    "404": {
                        "description": "game id not found",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/tvgames/{id}/attempts": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tvgames"
                ],
                "summary": "Retrieve game's attempts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game to query",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "Number of the page to query",
                        "name": "pageIndex",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "Length of the page to query",
                        "name": "pageLength",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Page-model_Tweet"
                        }
                    },
                    "400": {
                        "description": "integer parsing error (id)",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "game id not found",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "(internal server error)",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/tvgames/{id}/attempts/stats": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tvgames"
                ],
                "summary": "Retrieve game's attempts' frequencies",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game to query",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "description": "A chart as a sequence of entries",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.ChartEntry"
                            }
                        }
                    },
                    "400": {
                        "description": "integer parsing error (id)",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "game id not found",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/tvgames/{id}/results": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tvgames"
                ],
                "summary": "Retrieve game's number of successes and failures",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game to query",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.BooleanChart"
                        }
                    },
                    "400": {
                        "description": "integer parsing error (id)",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "game id not found",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        },
        "/tvgames/{id}/solution": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tvgames"
                ],
                "summary": "Retrieve game's solution",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game to query",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "integer parsing error (id)",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "404": {
                        "description": "game id not found",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    },
                    "500": {
                        "description": "(internal server error)",
                        "schema": {
                            "$ref": "#/definitions/model.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.BooleanChart": {
            "description": "A pair made of one positive counter and one negative counter",
            "type": "object",
            "properties": {
                "negatives": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 318
                },
                "positives": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 209
                }
            }
        },
        "model.ChartEntry": {
            "description": "A possible value inside a chart, alongside its absolute frequency",
            "type": "object",
            "properties": {
                "absolute_frequency": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 34
                },
                "value": {
                    "type": "string",
                    "example": "parola"
                }
            }
        },
        "model.Error": {
            "description": "Object returned on failed requests",
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "model.Game": {
            "type": "object",
            "properties": {
                "hashtag": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.Metrics": {
            "description": "Useful metrics describing a single Tweet",
            "type": "object",
            "properties": {
                "like_count": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 122
                },
                "reply_count": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 42
                },
                "retweet_count": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 15
                }
            }
        },
        "model.Page-model_Tweet": {
            "type": "object",
            "properties": {
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Tweet"
                    }
                },
                "number_of_pages": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "model.Tweet": {
            "description": "A post published on Twitter",
            "type": "object",
            "properties": {
                "author": {
                    "$ref": "#/definitions/model.User"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "metrics": {
                    "$ref": "#/definitions/model.Metrics"
                },
                "text": {
                    "type": "string",
                    "example": "Hello, world!"
                }
            }
        },
        "model.User": {
            "description": "A Twitter user",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Mario Rossi"
                },
                "profile_image_url": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "example": "mariorossi"
                }
            }
        }
    }
}