basePath: /api/v1
definitions:
  model.BooleanChart:
    description: A pair made of one positive counter and one negative counter
    properties:
      negatives:
        example: 318
        minimum: 0
        type: integer
      positives:
        example: 209
        minimum: 0
        type: integer
      string:
        example: Votes
        type: string
    type: object
  model.ChartEntry:
    description: A possible value inside a chart, alongside its absolute frequency
    properties:
      absolute_frequency:
        example: 34
        minimum: 0
        type: integer
      value:
        example: parola
        type: string
    type: object
  model.Coordinates:
    description: Map coordinates.
    properties:
      latitude:
        example: 40.683935
        maximum: 90
        minimum: -90
        type: number
      longitude:
        example: -74.026675
        maximum: 180
        minimum: -180
        type: number
    type: object
  model.Error:
    description: Object returned on failed requests
    properties:
      code:
        example: 400
        type: integer
      message:
        example: status bad request
        type: string
    type: object
  model.Game:
    description: A game which can be observed
    properties:
      hashtag:
        type: string
      id:
        type: integer
      logo:
        type: string
      name:
        type: string
    type: object
  model.GameKey:
    description: A possible solution for a Game
    properties:
      date:
        example: "2022-11-17"
        format: date
        type: string
      key:
        example: parola
        type: string
    type: object
  model.Metrics:
    description: Useful metrics describing a single Tweet
    properties:
      like_count:
        example: 122
        minimum: 0
        type: integer
      reply_count:
        example: 42
        minimum: 0
        type: integer
      retweet_count:
        example: 15
        minimum: 0
        type: integer
    type: object
  model.Page-model_Tweet:
    properties:
      entries:
        items:
          $ref: '#/definitions/model.Tweet'
        type: array
      number_of_pages:
        minimum: 1
        type: integer
    type: object
  model.Tweet:
    description: A post published on Twitter
    properties:
      author:
        $ref: '#/definitions/model.User'
      coordinates:
        $ref: '#/definitions/model.Coordinates'
      created_at:
        format: date-time
        type: string
      metrics:
        $ref: '#/definitions/model.Metrics'
      text:
        example: Hello, world!
        type: string
    type: object
  model.User:
    description: A Twitter user
    properties:
      name:
        example: Mario Rossi
        type: string
      profile_image_url:
        type: string
      username:
        example: mariorossi
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API implementation for the Software Engineering (90106) project for
    the academic year 2022/23 at the University of Bologna.
  license:
    name: GNU AFFERO GENERAL PUBLIC LICENSE
    url: https://www.gnu.org/licenses/agpl-3.0.en.html
  title: Birdazzone API
  version: "0.1"
paths:
  /hello:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Test your connection to birdazzone API
      tags:
      - test
  /tvgames:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Game'
            type: array
      summary: Get all TV games
      tags:
      - tvgames
  /tvgames/{id}:
    get:
      parameters:
      - description: ID to search
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Game'
        "404":
          description: game id not found
          schema:
            $ref: '#/definitions/model.Error'
      summary: Get TV game
      tags:
      - tvgames
  /tvgames/{id}/attempts:
    get:
      parameters:
      - description: Game to query
        in: path
        name: id
        required: true
        type: string
      - description: Starting instant of the time interval used to filter the tweets.
          If not specified, the beginning of the last game instance is used
        format: date-time
        in: query
        name: from
        type: string
      - description: Ending instant of the time interval used to filter the tweets.
          Must be later than but in the same day of the starting instant. If not specified,
          the ending of the game happening during the starting instant is used
        format: date-time
        in: query
        name: to
        type: string
      - default: 1
        description: Index of the page to query
        in: query
        minimum: 1
        name: pageIndex
        type: integer
      - default: 10
        description: Length of the page to query
        in: query
        minimum: 1
        name: pageLength
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Page-model_Tweet'
        "400":
          description: from and to must be in the same day
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: game id not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: (internal server error)
          schema:
            $ref: '#/definitions/model.Error'
      summary: Retrieve game's attempts
      tags:
      - tvgames
  /tvgames/{id}/attempts/stats:
    get:
      parameters:
      - description: Game to query
        in: path
        name: id
        required: true
        type: string
      - description: Starting instant of the time interval used to filter the tweets.
          If not specified, the beginning of the last game instance is used
        format: date-time
        in: query
        name: from
        type: string
      - description: Ending instant of the time interval used to filter the tweets.
          Must be later than but in the same day of the starting instant. If not specified,
          the ending of the game happening during the starting instant is used
        format: date-time
        in: query
        name: to
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            description: A chart as a sequence of entries
            items:
              $ref: '#/definitions/model.ChartEntry'
            type: array
        "400":
          description: integer parsing error (id)
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: game id not found
          schema:
            $ref: '#/definitions/model.Error'
      summary: Retrieve game's attempts' frequencies
      tags:
      - tvgames
  /tvgames/{id}/results:
    get:
      parameters:
      - description: Game to query
        in: path
        name: id
        required: true
        type: string
      - description: Starting date of the time interval used to filter the tweets.
          If not specified, the last game instance's date is used
        format: date
        in: query
        name: from
        type: string
      - description: Ending date of the time interval used to filter the tweets. Cannot
          be earlier than the starting date. If not specified, the starting date is
          used
        format: date
        in: query
        name: to
        type: string
      - description: Number of seconds for the duration of each time interval bin
          the retrieved tweets are to be grouped by
        in: query
        minimum: 1
        name: each
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: A array of boolean charts comparing successes and failures
            in the game. Each boolean chart is labeled as the starting instant of
            its time interval bin
          schema:
            items:
              $ref: '#/definitions/model.BooleanChart'
            type: array
        "400":
          description: each < 1
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: game id not found
          schema:
            $ref: '#/definitions/model.Error'
      summary: Retrieve game's number of successes and failures, grouped in time interval
        bins
      tags:
      - tvgames
  /tvgames/{id}/solution:
    get:
      parameters:
      - description: Game to query
        in: path
        name: id
        required: true
        type: string
      - description: Date to query; if not specified, last game instance is considered
        format: date
        in: query
        name: date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GameKey'
        "400":
          description: error while parsing to date
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: game id not found
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: (internal server error)
          schema:
            $ref: '#/definitions/model.Error'
      summary: Retrieve game's solution
      tags:
      - tvgames
swagger: "2.0"
